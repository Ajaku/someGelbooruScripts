====================
* Recursive Import *
====================
files:
 - recursive_batch_add.php

Slight modification of batch_add.php making it fully recursive (except for
maybe symbolic links, haven't tested w/ those). Also added some coloring to the
success and failure messages so you can tell at a glance which ones failed.
there's also a count of how many files were processed, how many succeeded, and
how many failed.


================
* Special Tags *
================
files:
 - config.php
 - default.css
 - includes/post_view.php

Sort of a band-aid solution until v0.2.X or maybe even 0.3 is released as I'm
sure those versions have a much better implementation than just putting a
specially recognized string at the beginning of a tag. One thing that isn't on
the site right now though (v0.2.5 at TOW) is keeping special tags separate from
regular ones when viewing a specific post like danbooru does; that capability
has been added to post_view.php. Special tags are those that begin with a
string that is present in the $special_tags array (character_doofus, game_pong,
etc.)

=============
* List Tags *
=============
files:
 - index.php
 - includes/tags.php
 - includes/header.php

Gives a printout of some/all tags in the database and how many posts use them

===============
* Parent Post *
===============
files:
 - classes/post.view.php
 - includes/post_view.php

Displays a link to the parent post/child posts if there are any

========================
* Batch Tag Operations *
========================
files:
 - admin/tag_ops.php
 - admin/tagOpsForm.html
 - admin/index.php
 - admin/left_menu.php
 - classes/tag.class.php

				**WARNING**
I've tested this a little for general use cases (read: what I need it to do),
but haven't gotten around to any corner cases yet. Make backups before use and
proceed with caution!

Manipulate lots of tags at the same time.
Features:
  *Add one or more tags to some or all posts
  *Remove one or more tags from some or all posts
  *Replace one tag with another in some or all posts
  *Specify a set of posts via an ID list or a regular expression matched
   against a post's properties such as its tags, title, source, etc.

When specifying an ID set, you can specify a range of IDs by seperating the two
IDs with a hyphen instead of a space. All ranges specified are inclusive (they
include the two numbers specified). Except for specifying a range, all numbers
must be seperated by a space.

Example:
	489 732 590 400-450 789

=======================
* Batch Image Removal *
=======================
files:
  - admin/remove_posts.php
  - admin/removeForm.html
  - admin/index.php
  - admin/left_menu.php

				**WARNING**
I've only tested this script for deletion based on tags. I believe there is a
bug where cached search results are not being deleted, but that might just be
a result of using the script before it was in its current state.

Remove lots of images based on one of these:
  *Tags
  *ID
  *Parent ID
  *Title
  *Rating

When specifying IDs, ranges are supported just like in "Batch Tag Operations".
You can also specify all of a given image's child posts. Just put the string
"parent:" before the image ID.
When taking input from the tags or title fields you can use wildcards just like
when searching from the front page. An asterisk (*) represents any number
characters while a question mark (?) represents any one character.

======
*Misc*
======
  - classes/search.classes.php
    *Searches that don't have a parent: parameter will no longer hide children
