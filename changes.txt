====================
* Recursive Import *
====================
files:
 - recursive_batch_add.php

Slight modification of batch_add.php making it fully recursive (except for
maybe symbolic links, haven't tested w/ those). Also added some coloring to the
success and failure messages so you can tell at a glance which ones failed.
there's also a count of how many files were processed, how many succeeded, and
how many failed.

==================
* Tag Categories *
==================
files:
 - upgrades/categories/index.php
   *requires classes/tag.class.php if $special_tags is defined in config.php

 - config.php
 - default.css
 - admin/index.php
 - admin/left_menu.php
 - admin/tag_categories.php
 - admin/tag_category_edit.php
 - classes/tag.class.php
 - includes/post_list.php
 - includes/post_view.php
 - includes/tags.php

Tags can now be assigned to a category and tag categories can be created by
mods and admins. When viewing a single post (post_view.php), tags in the same
category are grouped together and will be a different color than other tags
if outlined that way in the css. Tags of the same category are *NOT* grouped
together when viewing multiple posts, though they are colored according to the
rules outlined in the css.

				***NOTE***
The database must be upgraded for this feature. Copy the upgrade script to the
upgrades directory of your gelbooru installation. If you used the previous
implementation of the tag categories feature, you must also copy over the tag
class file (classes/tag.class.php) before executing the upgrade script. To
start the upgrade script, use a web browser to enter the URL for the directory
holding the script.

	Example URL:
		http://gelbooru.com/upgrades/categories/

If the previous implementation of tag categories was used, the $special_tags
variable should stay defined in config.php while executing the upgrade script.

				**WARNING**
If you used the previous implementation of this feature, it is heavily advised
that you make a backup of your database before executing the upgrade. Although
each line of code in the upgrade script has been tested and had the bugs worked
out, several blocks of code that execute when the $special_tags variable is
present were separated into multiple files during the debugging process and
haven't been tested since being combined into a single script.

It won't nuke the database or anything, but in the worst case scenario it could
remove any tag that has a prefix specified in $special_tags from a ton of posts

=============
* List Tags *
=============
files:
 - index.php
 - includes/tags.php
 - includes/header.php

Gives a printout of some/all tags in the database and how many posts use them.
When searching for something, any tag that contains the provided text will be
displayed (so just imagine a wildcard always being directly in front of and
behind whatever you type). To perform an exact search (effectively just
verifying if a certain tag exists), put a space in the front and back of what
you're searching for (so instead of "foobar", search for " foobar "). Providing
more than one word will result in showing only tags that contain both words.

===============
* Parent Post *
===============
files:
 - classes/post.class.php
 - includes/post_view.php

Displays a link to the parent post/child posts if there are any

========================
* Batch Tag Operations *
========================
files:
 - admin/tag_ops.php
 - admin/tagOpsForm.html
 - admin/index.php
 - admin/left_menu.php
 - classes/tag.class.php


Manipulate numerous posts' tags all at once.
Features:
  *Add one or more tags to some or all posts
  *Remove one or more tags from some or all posts
  *Replace one tag with another in some or all posts
  *Specify a set of posts via an ID list or a regular expression matched
   against a post's properties such as its tags, title, source, etc.

When specifying an ID set, you can specify a range of IDs by seperating the two
IDs with a hyphen instead of a space. All ranges specified are inclusive (they
include the two numbers specified). Except for specifying a range, all numbers
must be seperated by a space.

Example:
	489 732 590 400-450 789

				**WARNING**
I've tested this a little for general use cases (read: what I need it to do),
but haven't gotten around to any corner cases yet. Make backups before use and
proceed with caution!

=======================
* Batch Image Removal *
=======================
files:
  - admin/remove_posts.php
  - admin/removeForm.html
  - admin/index.php
  - admin/left_menu.php


Remove lots of posts based on one of these properties:
  *Tags
  *ID
  *Parent ID
  *Title
  *Rating

When specifying IDs, ranges are supported just like in "Batch Tag Operations".
You can also specify all of a given image's child posts. Just put the string
"parent:" before the image ID.
When taking input from the tags or title fields you can use wildcards just like
when searching from the front page. An asterisk (*) represents any number
characters while a question mark (?) represents any one character.

				**WARNING**
I've only tested this script for deletion based on tags. I believe there is a
bug where cached search results are not being deleted, but that might just be
a result of using the script before it was in its current state.

==========================
* Alias Editing/Deletion *
==========================
files:
  - admin/alias_edit.php
  - admin/index.php
  - admin/left_menu.php

Allows site administrators to easily delete aliases or change their status.

======
*Misc*
======
  - classes/image.class.php
    *Fixed bug when getting extension of file with multiple periods
    *Changed error message when image is present in deleted images table
    *Added error message for files containing HTML
    *Added safeguard to getremoteimage() function to stop fatal memory errors
     for fuckhuge images

  - classes/search.classes.php
    *Searches that don't have a parent: parameter will no longer hide children

  - classes/tag.class.php
    *When incrementing or decrementing a tag's entry in the tag_index table,
    a second argument can be given specifying the quantity by which to change
    the index count

  - includes/alias.php
  - admin/alias.php
    *Fixed table column headers ('Alias' was the header for the tag column and
    vice versa)
